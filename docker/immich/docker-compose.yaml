
name: immich

services:
  immich-server:
    container_name: immich_server-eros
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    depends_on:
      - redis
      - database
    restart: always
    logging:
      driver: loki
      options:
        loki-url: "https://loki.hughboi.cc/loki/api/v1/push"
        loki-retries: 2
        loki-max-backoff: 800ms
        loki-timeout: 1s
        keep-file: "true"
        mode: "non-blocking"
    volumes:
      # Do not edit the next line. If you want to change the media storage location on your system, edit the value of UPLOAD_LOCATION in the .env file
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
      - /mnt/truenas/liyah:/mnt/media/truenas:ro
    env_file:
      - .env
    healthcheck:
      disable: false
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.eros.entrypoints=http"
      - "traefik.http.routers.eros.rule=Host(`eros.hughboi.cc`)"
      - "traefik.http.middlewares.eros-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.eros.middlewares=eros-https-redirect"
      - "traefik.http.routers.eros-secure.entrypoints=https"
      - "traefik.http.routers.eros-secure.rule=Host(`eros.hughboi.cc`)"
      - "traefik.http.routers.eros-secure.tls=true"
      - "traefik.http.routers.eros-secure.service=eros"
      - "traefik.http.services.eros.loadbalancer.server.port=2283"
      - "traefik.docker.network=proxy"    
    networks:
      - proxy
      - eros


  immich-machine-learning:
    container_name: immich_machine_learning-eros
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    restart: always
    logging:
      driver: loki
      options:
        loki-url: "https://loki.hughboi.cc/loki/api/v1/push"
        loki-retries: 2
        loki-max-backoff: 800ms
        loki-timeout: 1s
        keep-file: "true"
        mode: "non-blocking"
    volumes:
      - model-cache:/cache
    env_file:
      - .env
    healthcheck:
      disable: false
    networks:
      - eros

  redis:
    container_name: immich_redis-eros
    image: docker.io/valkey/valkey:8-bookworm
    restart: always
    healthcheck:
      test: redis-cli ping || exit 1
    networks:
      - eros

  database:
    container_name: immich_postgres-eros
    image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvector0.8.0-pgvectors0.3.0 
    restart: always
    logging:
      driver: loki
      options:
        loki-url: "https://loki.hughboi.cc/loki/api/v1/push"
        loki-retries: 2
        loki-max-backoff: 800ms
        loki-timeout: 1s
        keep-file: "true"
        mode: "non-blocking"
    volumes:
      - immich-postgres-eros:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    env_file:
      - .env
    networks:
      - eros

volumes:
  model-cache:
  immich-postgres-eros:
  immich-upload:

networks:
  proxy:
    external: true
  eros:

